version: '3'

services:
  mongodb:
    image: mongo:latest
    restart: always
    networks:
      - default
    ports:
      - 27017:27017
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: password1
    volumes:
      - ./data/db:/data/db

  neo4j:
#    image: neo4j:latest
    build: ./neo4j
    restart: always
    networks:
      - default
    ports:
      - 7474:7474
      - 7687:7687
    environment:
      NEO4J_USERNAME: neo4j
      NEO4J_PASSWORD: password1
    volumes:
      - ./data/neo4j:/data

  o7-bot:
#    image: ghcr.io/ralphschuler/o7:latest
    build: .
    restart: always
    networks:
      - default
    depends_on:
      - mongodb
      - neo4j
    environment:
      NODE_ENV: dev
      OWNERS: 123456789012345678,987654321098765432
      DISCORD_TOKEN: ODE0NDM1NTM3ODg4MzQ2MTEy.GawLaw.YtMR9TsTAcMhqy8423nf987D2HTAR3Mgnw
      PREFIX: !
      MONGO_CONNECTION_STRING: mongodb://mongo:password1@mongodb:27017
      MONGO_DATABASE: o7-bot
      NEO4J_URI: bolt://neo4j:password1@neo4j:7687
      NEO4J_DATABASE: o7-bot
      NEO4J_USERNAME: neo4j
      NEO4J_PASSWORD: password1
      GCLOUD_AUTH_CLIENT_EMAIL:
      GCLOUD_AUTH_PRIVATE_KEY:
      GCLOUD_BUCKET:

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --cleanup --interval 30

networks:
  default: